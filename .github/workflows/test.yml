name: Test

on:
  pull_request:
    paths-ignore:
    - 'README.md'
    - 'CODE_OF_CONDUCT.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'
    - 'SECURITY.md'
    - 'docs/**'
    - '.github/**'
    - '!.github/workflows/test.yml'
  push:
    branches:
    - develop
    - main
    - release/*
    tags: '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
    - 'README.md'
    - 'CODE_OF_CONDUCT.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'
    - 'SECURITY.md'
    - 'docs/**'
    - '.github/**'
    - '!.github/workflows/test.yml'
  release:
    types:
    - created

# Keep in sync with codeql-analysis.yml and build-deploy.yml
env:
  CI: true
  node: 16.x
  java: 17

jobs:

  server-tests:
    name: Server Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
    - uses: actions/checkout@v3
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '${{ env.java }}'
        cache: 'gradle'
    - name: Java Tests
      run: ./gradlew --console=plain executeTests jacocoTestReport -x webapp jacocoTestCoverageVerification
    - name: "Codacy: Report coverage"
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: build/reports/jacoco/test/jacocoTestReport.xml
      if: (github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name) && (success() || failure()) && github.event.pull_request.user.login != 'dependabot[bot]'
    - name: Annotate Server Test Results
      uses: ashley-taylor/junit-report-annotations-action@9ac2f823854c677f30e062dfe779445e33e5d380
      if: always() && github.event.pull_request.user.login != 'dependabot[bot]'
      with:
        access-token: ${{ secrets.GITHUB_TOKEN }}
        path: build/test-results/test/*.xml
        numFailures: 99
    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.2.0
      with:
        filename: build/reports/jacoco/test/jacocoTestReport.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

  server-style:
    name: Server Code Style
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v3
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '${{ env.java }}'
        cache: 'gradle'
    - name: Java Code Style
      run: ./gradlew spotlessCheck
    - name: Java Documentation
      run: ./gradlew checkstyleMain -x webapp
      if: success() || failure()

  client-tests:
    name: Client Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
        - uses: actions/checkout@v3
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
              node-version: '${{ env.node }}'
              cache: 'npm'
        - name: Install Dependencies
          run: npm install
        - name: Compile TypeScript Test Files With Typechecking
          run: npm run compile:ts:tests
        - name: TypeScript Test Without Typechecking
          run: npm run test:ci
        - name: Annotate Client Test Results
          uses: ashley-taylor/junit-report-annotations-action@9ac2f823854c677f30e062dfe779445e33e5d380
          if: always() && github.event.pull_request.user.login != 'dependabot[bot]'
          with:
              access-token: ${{ secrets.GITHUB_TOKEN }}
              path: junit.xml
              numFailures: 99
        - name: Code Coverage Summary Report
          uses: irongut/CodeCoverageSummary@v1.2.0
          with:
            filename: junit.xml
            badge: true
            fail_below_min: true
            format: markdown
            hide_branch_rate: false
            hide_complexity: true
            indicators: true
            output: both
            thresholds: '60 80'
        - name: Add Coverage PR Comment
          uses: marocchino/sticky-pull-request-comment@v2
          if: github.event_name == 'pull_request'
          with:
            recreate: true
            path: code-coverage-results.md

  client-tests-selected:
    name: Selected Client Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
        - uses: actions/checkout@v3
          with:
              fetch-depth: 0
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
              node-version: '${{ env.node }}'
              cache: 'npm'
        - name: Install Dependencies
          run: npm install
        - name: Compile TypeScript Test Files With Typechecking
          run: npm run compile:ts:tests
        - name: TypeScript Test (Selection) Without Typechecking
          run: npm run test-diff:ci

  client-style:
    name: Client Code Style
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '${{ env.node }}'
        cache: 'npm'
    - name: Install Dependencies
      run: npm install
    - name: TypeScript Formatting
      run: npm run prettier:check
    - name: TypeScript Code Style
      run: npm run lint
      if: success() || failure()

  client-compilation:
    name: Client Compilation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '${{ env.node }}'
        cache: 'npm'
    - name: Install Dependencies
      run: npm install
    - name: Compile TypeScript Files With Typechecking
      run: npm run compile:ts
